// Code generated by ent, DO NOT EDIT.

package meta

import (
	"entgo.io/ent/dialect/sql"
)

const (
	// Label holds the string label denoting the meta type in the database.
	Label = "meta"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldName holds the string denoting the name field in the database.
	FieldName = "name"
	// FieldCreateTime holds the string denoting the create_time field in the database.
	FieldCreateTime = "create_time"
	// FieldFavorite holds the string denoting the favorite field in the database.
	FieldFavorite = "favorite"
	// FieldFileIndices holds the string denoting the file_indices field in the database.
	FieldFileIndices = "file_indices"
	// FieldThumbnail holds the string denoting the thumbnail field in the database.
	FieldThumbnail = "thumbnail"
	// FieldRead holds the string denoting the read field in the database.
	FieldRead = "read"
	// FieldTags holds the string denoting the tags field in the database.
	FieldTags = "tags"
	// Table holds the table name of the meta in the database.
	Table = "meta"
)

// Columns holds all SQL columns for meta fields.
var Columns = []string{
	FieldID,
	FieldName,
	FieldCreateTime,
	FieldFavorite,
	FieldFileIndices,
	FieldThumbnail,
	FieldRead,
	FieldTags,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// NameValidator is a validator for the "name" field. It is called by the builders before save.
	NameValidator func(string) error
	// DefaultFavorite holds the default value on creation for the "favorite" field.
	DefaultFavorite bool
)

// OrderOption defines the ordering options for the Meta queries.
type OrderOption func(*sql.Selector)

// ByID orders the results by the id field.
func ByID(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldID, opts...).ToFunc()
}

// ByName orders the results by the name field.
func ByName(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldName, opts...).ToFunc()
}

// ByCreateTime orders the results by the create_time field.
func ByCreateTime(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldCreateTime, opts...).ToFunc()
}

// ByFavorite orders the results by the favorite field.
func ByFavorite(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldFavorite, opts...).ToFunc()
}

// ByRead orders the results by the read field.
func ByRead(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldRead, opts...).ToFunc()
}
